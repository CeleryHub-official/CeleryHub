-- AUTO EXEC
AutoExecFound = false
GameName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
-- Game Name
        -- BETA
        local gamenames = {
            "Rivals";
            "Blade Ball";
            "Cat Piece";
            "Siege";
        }

         -- Function to count the number of entries in the table
         local function countEntries(tbl)
            local count = 0
            for _ in pairs(tbl) do
                count = count + 1
            end
            return count
        end

        -- Get the number of entries
        local numberOfEntries = countEntries(gamenames)

        Search = 0

        for i = 1, numberOfEntries do

           Search = Search + 1

        
        gamesearch = gamenames[Search]

                    
               if string.find(GameName, gamesearch) then
                    AutoExecFound = true
					print(AutoExecFound)

            end
        end

        if AutoExecFound == true then

        script1 = nil
        script2 = nil
        script3 = nil

        if GameName == "Siege" then
            script1 = "https://raw.githubusercontent.com/Exunys/AirHub/main/AirHub.lua"
        elseif GameName == "Rivals" then
            local scriptURL = 'https://raw.githubusercontent.com/Sheeshablee73/Scriptss/main/RivalsUPD2.lua'
        local response = game:HttpGet(scriptURL)
        local executeScript = loadstring(response)
        executeScript()
        elseif GameName == "Blade" then
            script1 = "https://raw.githubusercontent.com/000177171/mantain-scripts/main/BB/TripleHub"
        elseif GameName == "Cat Piece" then
            script1 = "https://raw.githubusercontent.com/Kaitofyp/Cat-Piece-V.2/main/Op%20script"
        end



            if script1 ~= nil then 
            loadstring(game:HttpGet(script1))()
            end

            if script2 ~= nil then
                loadstring(game:HttpGet(script2))()
            end

            if script3 ~= nil then
                loadstring(game:HttpGet(script3))()
            end
        end
